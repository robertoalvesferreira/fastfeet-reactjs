{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/reactjs/hooks/src/App.js\";\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\n\nfunction App() {\n  const [tech, setTech] = useState([]);\n  const [newTech, setNewTech] = useState('');\n  const handledAdd = useCallback(() => {\n    setTech([...tech, newTech]);\n    setNewTech('');\n  });\n  useEffect(() => {\n    const storageTech = localStorage.getItem('tech');\n\n    if (storageTech) {\n      setTech(JSON.parse(storageTech));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tech', JSON.stringify(tech));\n  }, [tech]);\n  const techSize = useMemo(() => tech.length, [tech]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, tech.map(t => /*#__PURE__*/React.createElement(\"li\", {\n    key: t,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, t))), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Voc\\xEA tem \", techSize, \" tecnologias\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: newTech,\n    onChange: e => setNewTech(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handledAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/reactjs/hooks/src/App.js"],"names":["React","useState","useEffect","useMemo","useCallback","App","tech","setTech","newTech","setNewTech","handledAdd","storageTech","localStorage","getItem","JSON","parse","setItem","stringify","techSize","length","map","t","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,WAA9C,QAAiE,OAAjE;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMS,UAAU,GAAGN,WAAW,CAAC,MAAM;AACnCG,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUE,OAAV,CAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAH6B,CAA9B;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAApB;;AAEA,QAAIF,WAAJ,EAAiB;AACfJ,MAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAD,CAAP;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAeX,IAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,QAAMY,QAAQ,GAAGf,OAAO,CAAC,MAAMG,IAAI,CAACa,MAAZ,EAAoB,CAACb,IAAD,CAApB,CAAxB;AAEA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACc,GAAL,CAASC,CAAC,iBACT;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,CAAb,CADD,CADH,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBH,QAAlB,iBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE;AAAO,IAAA,KAAK,EAAEV,OAAd;AAAuB,IAAA,QAAQ,EAAEc,CAAC,IAAIb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEd,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CADF;AAeD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\n\nfunction App() {\n  const [tech, setTech] = useState([]);\n  const [newTech, setNewTech] = useState('');\n\n  const handledAdd = useCallback(() => {\n    setTech([...tech, newTech]);\n    setNewTech('');\n  });\n\n  useEffect(() => {\n    const storageTech = localStorage.getItem('tech');\n\n    if (storageTech) {\n      setTech(JSON.parse(storageTech));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tech', JSON.stringify(tech));\n  }, [tech]);\n\n  const techSize = useMemo(() => tech.length, [tech]);\n\n  return (\n    <>\n      <ul>\n        {tech.map(t => (\n          <li key={t}>{t}</li>\n        ))}\n      </ul>\n      <strong>Você tem {techSize} tecnologias</strong>\n      <br />\n      <input value={newTech} onChange={e => setNewTech(e.target.value)} />\n      <button type=\"button\" onClick={handledAdd}>\n        Adicionar\n      </button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}