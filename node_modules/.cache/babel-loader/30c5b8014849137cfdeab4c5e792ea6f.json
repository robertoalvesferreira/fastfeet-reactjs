{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/reactjs/fastfeet-reactjs/src/components/Img/index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\nimport { Container } from './styles';\nimport api from '../../services/api';\nexport default function AvatarInput(props) {\n  const {\n    urls\n  } = props;\n  const {\n    defaultValue,\n    registerField\n  } = useField('avatar_id');\n  const [file, setFile] = useState(defaultValue && defaultValue.id);\n  const [preview, setPreview] = useState(urls);\n  const ref = useRef();\n  useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: 'avatar_id',\n        ref: ref.current,\n        path: 'dataset.file'\n      });\n    }\n\n    console.log(urls);\n  }, [ref, registerField]);\n\n  async function handleChange(e) {\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    const response = await api.post('files', data);\n    const {\n      id,\n      url\n    } = response.data;\n    setFile(id);\n    console.log(urls);\n    setPreview(urls);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"avatar_id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: urls || 'https://api.adorable.io/avatars/50/abott@adorable.png',\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"avatar_id\",\n    accepet: \"image/*\",\n    \"data-file\": file,\n    onChange: handleChange,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/reactjs/fastfeet-reactjs/src/components/Img/index.js"],"names":["React","useState","useRef","useEffect","useField","Container","api","AvatarInput","props","urls","defaultValue","registerField","file","setFile","id","preview","setPreview","ref","current","name","path","console","log","handleChange","e","data","FormData","append","target","files","response","post","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAM;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCP,QAAQ,CAAC,WAAD,CAAhD;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACS,YAAY,IAAIA,YAAY,CAACI,EAA9B,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACQ,IAAD,CAAtC;AACA,QAAMQ,GAAG,GAAGf,MAAM,EAAlB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,GAAG,CAACC,OAAR,EAAiB;AACfP,MAAAA,aAAa,CAAC;AACZQ,QAAAA,IAAI,EAAE,WADM;AAEZF,QAAAA,GAAG,EAAEA,GAAG,CAACC,OAFG;AAGZE,QAAAA,IAAI,EAAE;AAHM,OAAD,CAAb;AAKD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD,GATQ,EASN,CAACQ,GAAD,EAAMN,aAAN,CATM,CAAT;;AAWA,iBAAeY,YAAf,CAA4BC,CAA5B,EAA+B;AAC7B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;AACA,UAAMC,QAAQ,GAAG,MAAMxB,GAAG,CAACyB,IAAJ,CAAS,OAAT,EAAkBN,IAAlB,CAAvB;AACA,UAAM;AAAEX,MAAAA,EAAF;AAAMkB,MAAAA;AAAN,QAAcF,QAAQ,CAACL,IAA7B;AACAZ,IAAAA,OAAO,CAACC,EAAD,CAAP;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAO,IAAAA,UAAU,CAACP,IAAD,CAAV;AACD;;AAED,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEA,IAAI,IAAI,uDADf;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,iBAAWG,IAJb;AAKE,IAAA,QAAQ,EAAEW,YALZ;AAME,IAAA,GAAG,EAAEN,GANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAkBD","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport { useField } from '@rocketseat/unform';\nimport { Container } from './styles';\nimport api from '../../services/api';\n\nexport default function AvatarInput(props) {\n  const { urls } = props;\n  const { defaultValue, registerField } = useField('avatar_id');\n\n  const [file, setFile] = useState(defaultValue && defaultValue.id);\n  const [preview, setPreview] = useState(urls);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: 'avatar_id',\n        ref: ref.current,\n        path: 'dataset.file',\n      });\n    }\n    console.log(urls);\n  }, [ref, registerField]);\n\n  async function handleChange(e) {\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    const response = await api.post('files', data);\n    const { id, url } = response.data;\n    setFile(id);\n    console.log(urls);\n    setPreview(urls);\n  }\n\n  return (\n    <Container>\n      <label htmlFor=\"avatar_id\">\n        <img\n          src={urls || 'https://api.adorable.io/avatars/50/abott@adorable.png'}\n          alt=\"\"\n        />\n        <input\n          type=\"file\"\n          id=\"avatar_id\"\n          accepet=\"image/*\"\n          data-file={file}\n          onChange={handleChange}\n          ref={ref}\n        />\n      </label>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}